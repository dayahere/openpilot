# OpenPilot Test Environment Dockerfile
# Provides a complete testing environment with all dependencies


FROM node:20

# Install Python for auto-fix scripts
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    git \
    bash \
    curl \
    openjdk-17-jdk \
    unzip \
    wget

# Install Flutter for Android builds
RUN wget https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.24.3-stable.tar.xz \
    && tar -xf flutter_linux_3.24.3-stable.tar.xz -C /opt \
    && rm flutter_linux_3.24.3-stable.tar.xz \
    && /opt/flutter/bin/flutter config --no-analytics \
    && /opt/flutter/bin/flutter precache
ENV PATH="$PATH:/opt/flutter/bin"

# Set working directory
WORKDIR /app

COPY package*.json ./
COPY core/package*.json ./core/
COPY tests/package*.json ./tests/
COPY openpilot-core-1.0.0.tgz ./

# Install root dependencies
RUN npm install || true

# Install core dependencies
WORKDIR /app/core
RUN npm install

# Install test dependencies
WORKDIR /app/tests
RUN npm install

# Copy all source code
WORKDIR /app
COPY . .

# Install other dependencies (if they exist)
WORKDIR /app/vscode-extension
RUN if [ -f package.json ]; then npm install; fi || true

WORKDIR /app/web
RUN if [ -f package.json ]; then npm install; fi || true

WORKDIR /app/desktop
RUN if [ -f package.json ]; then npm install; fi || true

# Build core library
WORKDIR /app/core
RUN npm run build

# Set working directory back to app root
WORKDIR /app

# Default command: run tests
CMD ["npm", "test", "--prefix", "tests"]
