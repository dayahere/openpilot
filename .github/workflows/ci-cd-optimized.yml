name: OpenPilot CI/CD - Optimized

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  OLLAMA_VERSION: 'latest'

jobs:
  # Job 1: Test Core Library
  test-core:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: core/package-lock.json
          
      - name: Install dependencies
        working-directory: core
        run: npm ci --legacy-peer-deps
        
      - name: Run tests
        working-directory: core
        run: npm test -- --coverage
        
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          directory: ./core/coverage
          flags: core
          
  # Job 2: Test VSCode Extension
  test-vscode:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install core dependencies
        working-directory: core
        run: npm ci --legacy-peer-deps
        
      - name: Build core
        working-directory: core
        run: npm run build
        
      - name: Install extension dependencies
        working-directory: vscode-extension
        run: npm ci --legacy-peer-deps
        
      - name: Compile extension
        working-directory: vscode-extension
        run: npm run compile
        
      - name: Run unit tests
        working-directory: vscode-extension
        run: npm test -- --testPathIgnorePatterns=integration,e2e
        continue-on-error: true
        
  # Job 3: Build VSCode Extension
  build-vscode:
    runs-on: ubuntu-latest
    needs: [test-core, test-vscode]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install core dependencies
        working-directory: core
        run: npm ci --legacy-peer-deps
        
      - name: Build core
        working-directory: core
        run: npm run build
        
      - name: Install extension dependencies
        working-directory: vscode-extension
        run: npm ci --legacy-peer-deps
        
      - name: Compile extension
        working-directory: vscode-extension
        run: npm run compile
        
      - name: Package extension
        working-directory: vscode-extension
        run: |
          npm install -g @vscode/vsce
          vsce package --allow-missing-repository
        continue-on-error: true
        
      - name: Upload VSIX
        uses: actions/upload-artifact@v4
        with:
          name: vscode-extension
          path: vscode-extension/*.vsix
        if: success()
        
  # Job 4: Test Desktop App
  test-desktop:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install core dependencies
        working-directory: core
        run: npm ci --legacy-peer-deps
        
      - name: Build core
        working-directory: core
        run: npm run build
        
      - name: Install desktop dependencies
        working-directory: desktop
        run: npm ci --legacy-peer-deps
        
      - name: Run tests
        working-directory: desktop
        run: npm test
        continue-on-error: true
        
  # Job 5: Test Web App
  test-web:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install core dependencies
        working-directory: core
        run: npm ci --legacy-peer-deps
        
      - name: Build core
        working-directory: core
        run: npm run build
        
      - name: Install web dependencies
        working-directory: web
        run: npm ci --legacy-peer-deps
        
      - name: Build web app
        working-directory: web
        run: npm run build
        
      - name: Run tests
        working-directory: web
        run: npm test
        continue-on-error: true
        
  # Job 6: Lint and Format Check
  lint:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: |
          cd core && npm ci --legacy-peer-deps
          cd ../vscode-extension && npm ci --legacy-peer-deps
        
      - name: Run ESLint
        run: |
          cd core && npm run lint || true
          cd ../vscode-extension && npm run lint || true
        
  # Job 7: Integration Tests (with Ollama)
  integration-tests:
    runs-on: ubuntu-latest
    needs: [test-core]
    
    services:
      ollama:
        image: ollama/ollama:latest
        ports:
          - 11434:11434
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Pull Ollama model
        run: |
          docker run -d --name ollama -p 11434:11434 ollama/ollama
          sleep 10
          docker exec ollama ollama pull phi3:mini
        
      - name: Install core dependencies
        working-directory: core
        run: npm ci --legacy-peer-deps
        
      - name: Run integration tests
        working-directory: core
        run: npm run test:integration || true
        env:
          OLLAMA_API_URL: http://localhost:11434
          
  # Job 8: Security Audit
  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run npm audit
        run: |
          cd core && npm audit --audit-level=moderate || true
          cd ../vscode-extension && npm audit --audit-level=moderate || true
          cd ../desktop && npm audit --audit-level=moderate || true
          cd ../web && npm audit --audit-level=moderate || true
        
  # Job 9: Build Summary
  summary:
    runs-on: ubuntu-latest
    needs: [test-core, test-vscode, build-vscode, test-desktop, test-web, lint, integration-tests]
    if: always()
    
    steps:
      - name: Build Summary
        run: |
          echo "## ðŸŽ‰ Build Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Results:" >> $GITHUB_STEP_SUMMARY
          echo "- Core Library: ${{ needs.test-core.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- VSCode Extension: ${{ needs.test-vscode.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Desktop App: ${{ needs.test-desktop.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Web App: ${{ needs.test-web.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Status:" >> $GITHUB_STEP_SUMMARY
          echo "- VSCode Extension: ${{ needs.build-vscode.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Lint: ${{ needs.lint.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Integration Tests: ${{ needs.integration-tests.result }}" >> $GITHUB_STEP_SUMMARY
